basePath: /v1
definitions:
  entity.Book:
    properties:
      created_at:
        type: string
      id:
        type: integer
      isbn:
        type: string
      price:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  entity.Order:
    properties:
      book_id:
        type: integer
      created_at:
        type: string
      fee:
        type: integer
      id:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
      total_price:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  entity.OrderPayload:
    properties:
      book_id:
        type: integer
      quantity:
        type: integer
    type: object
  response.ErrorBody:
    properties:
      errors:
        items:
          $ref: '#/definitions/response.ErrorInfo'
        type: array
      meta: {}
    type: object
  response.ErrorInfo:
    properties:
      code:
        type: integer
      field:
        type: string
      message:
        type: string
    type: object
  response.MetaInfo:
    properties:
      http_status:
        type: integer
    type: object
  response.SuccessBody:
    properties:
      data: {}
      message:
        type: string
      meta: {}
    type: object
host: localhost:9999
info:
  contact: {}
  description: An API Documentation
  title: Book Store API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: An API to show list of books
      operationId: book list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessBody'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Book'
                  type: array
                meta:
                  $ref: '#/definitions/response.MetaInfo'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorBody'
      summary: Show Book List
      tags:
      - book
  /orders:
    get:
      consumes:
      - application/json
      description: An API to show history of orders
      operationId: order list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessBody'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Order'
                  type: array
                meta:
                  $ref: '#/definitions/response.MetaInfo'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorBody'
      summary: Show History Order
      tags:
      - order
    post:
      consumes:
      - application/json
      description: An API to create an order
      operationId: create order
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.OrderPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessBody'
            - properties:
                data:
                  $ref: '#/definitions/entity.Order'
                meta:
                  $ref: '#/definitions/response.MetaInfo'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorBody'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorBody'
      summary: Create an Order
      tags:
      - order
swagger: "2.0"
